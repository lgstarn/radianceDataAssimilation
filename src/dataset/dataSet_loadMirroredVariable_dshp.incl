        class(MirroredArray),   pointer :: mArray        
        class(DataArray), 	    pointer :: dArray

        allocate(mArray)
        call mArray%mirroredArrayConstructor(dShape,dataptr)

        dArray => mArray
        
		if (present(LocationInFile)) then
	        call this%doLoadArray(pinfo,dArray,locationInFile,required,loadDTypeNum)
        else
	        call this%doLoadArray(pinfo,dArray,variableName,required,loadDTypeNum)
        end if

       	allocate(var)
       	call var%dataVariableConstructor(variableName,dArray,.true.,.false.)
        
        call this%addVariablePointer(var)
        
        if (present(squeeze)) then
        	if (squeeze) then
        		call var%squeeze()
        	end if
    	end if        